{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skaeh\\\\IdeaProjects\\\\webBookstore\\\\frontend\\\\src\\\\pages\\\\BookList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchBooks } from \"../api\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookList = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        books,\n        totalPages\n      } = await fetchBooks(query, page); // 변경된 응답 형식\n      setBooks(books);\n      setTotalPages(totalPages); // totalPages 값도 갱신\n    };\n    fetchData();\n  }, [query, page]); // `page`와 `query`가 변경될 때마다 데이터를 다시 가져옵니다.\n\n  const handleSearchChange = event => {\n    setQuery(event.target.value);\n    setPage(1); // 검색 시 1페이지로 리셋\n  };\n  const handlePagination = newPage => {\n    if (newPage >= 1 && newPage <= totalPages) {\n      setPage(newPage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uCC45 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC81C\\uBAA9 \\uB610\\uB294 \\uC800\\uC790\\uB85C \\uAC80\\uC0C9\",\n      value: query,\n      onChange: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: books.map(book => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/books/${book.id}`,\n            children: book.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC800\\uC790: \", book.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, book.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePagination(page - 1),\n        disabled: page === 1,\n        children: \"\\uC774\\uC804\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\uD398\\uC774\\uC9C0 \", page, \" / \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePagination(page + 1),\n        disabled: page === totalPages,\n        children: \"\\uB2E4\\uC74C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(BookList, \"H/eqT56T3ZLGkgiQUFPmDN1jvk0=\");\n_c = BookList;\nexport default BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","useState","useEffect","fetchBooks","Link","jsxDEV","_jsxDEV","BookList","_s","books","setBooks","query","setQuery","page","setPage","totalPages","setTotalPages","fetchData","handleSearchChange","event","target","value","handlePagination","newPage","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","book","to","id","title","author","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/skaeh/IdeaProjects/webBookstore/frontend/src/pages/BookList.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchBooks } from \"../api\";\r\nimport { Book } from \"../types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BookList: React.FC = () => {\r\n  const [books, setBooks] = useState<Book[]>([]);\r\n  const [query, setQuery] = useState<string>(\"\");\r\n  const [page, setPage] = useState<number>(1);\r\n  const [totalPages, setTotalPages] = useState<number>(1);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { books, totalPages } = await fetchBooks(query, page);  // 변경된 응답 형식\r\n      setBooks(books);\r\n      setTotalPages(totalPages);  // totalPages 값도 갱신\r\n    };\r\n    fetchData();\r\n  }, [query, page]); // `page`와 `query`가 변경될 때마다 데이터를 다시 가져옵니다.\r\n\r\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setQuery(event.target.value);\r\n    setPage(1);  // 검색 시 1페이지로 리셋\r\n  };\r\n\r\n  const handlePagination = (newPage: number) => {\r\n    if (newPage >= 1 && newPage <= totalPages) {\r\n      setPage(newPage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>책 목록</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"제목 또는 저자로 검색\"\r\n        value={query}\r\n        onChange={handleSearchChange}\r\n      />\r\n      <div>\r\n        {books.map((book) => (\r\n          <div key={book.id}>\r\n            <h3>\r\n              <Link to={`/books/${book.id}`}>{book.title}</Link>\r\n            </h3>\r\n            <p>저자: {book.author}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* 페이지네이션 */}\r\n      <div>\r\n        <button onClick={() => handlePagination(page - 1)} disabled={page === 1}>이전</button>\r\n        <span>페이지 {page} / {totalPages}</span>\r\n        <button onClick={() => handlePagination(page + 1)} disabled={page === totalPages}>다음</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}