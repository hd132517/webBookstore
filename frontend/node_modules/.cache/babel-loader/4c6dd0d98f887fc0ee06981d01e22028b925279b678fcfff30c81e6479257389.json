{"ast":null,"code":"const API_URL = \"http://localhost:5000/api/books\";\n\n// 책 목록 조회 (검색 및 페이지네이션 추가)\nexport const fetchBooks = async (query = \"\", page = 1) => {\n  const response = await fetch(`${API_URL}?q=${query}&_page=${page}&_limit=10`);\n\n  // 응답 본문을 JSON으로 파싱\n  const data = await response.json();\n\n  // 응답 헤더에서 X-Total-Count 값을 가져옵니다.\n  const totalCount = response.headers.get(\"X-Total-Count\");\n  const totalPages = totalCount ? Math.ceil(Number(totalCount) / 10) : 1; // 총 페이지 수 계산\n\n  return {\n    books: data.books,\n    totalPages\n  };\n};\n\n// 책 상세 정보 조회\nexport const fetchBookById = async id => {\n  const response = await fetch(`${API_URL}/${id}`);\n  return response.json();\n};\n\n// 책 추가\nexport const addBook = async book => {\n  await fetch(API_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(book)\n  });\n};\n\n// 책 정보 수정\nexport const updateBook = async (id, updatedData) => {\n  await fetch(`${API_URL}/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(updatedData)\n  });\n};\n\n// 책 삭제\nexport const deleteBook = async id => {\n  await fetch(`${API_URL}/${id}`, {\n    method: \"DELETE\"\n  });\n};","map":{"version":3,"names":["API_URL","fetchBooks","query","page","response","fetch","data","json","totalCount","headers","get","totalPages","Math","ceil","Number","books","fetchBookById","id","addBook","book","method","body","JSON","stringify","updateBook","updatedData","deleteBook"],"sources":["C:/Users/skaeh/IdeaProjects/webBookstore/frontend/src/api.ts"],"sourcesContent":["import { Book } from \"./types\";\r\n\r\nconst API_URL = \"http://localhost:5000/api/books\";\r\n\r\n// 책 목록 조회 (검색 및 페이지네이션 추가)\r\nexport const fetchBooks = async (query: string = \"\", page: number = 1): Promise<{ books: Book[], totalPages: number }> => {\r\n  const response = await fetch(`${API_URL}?q=${query}&_page=${page}&_limit=10`);\r\n\r\n  // 응답 본문을 JSON으로 파싱\r\n  const data = await response.json();\r\n\r\n  // 응답 헤더에서 X-Total-Count 값을 가져옵니다.\r\n  const totalCount = response.headers.get(\"X-Total-Count\");\r\n  const totalPages = totalCount ? Math.ceil(Number(totalCount) / 10) : 1;  // 총 페이지 수 계산\r\n\r\n  return { books: data.books, totalPages };\r\n};\r\n\r\n\r\n// 책 상세 정보 조회\r\nexport const fetchBookById = async (id: number): Promise<Book> => {\r\n  const response = await fetch(`${API_URL}/${id}`);\r\n  return response.json();\r\n};\r\n\r\n// 책 추가\r\nexport const addBook = async (book: Omit<Book, \"id\">): Promise<void> => {\r\n  await fetch(API_URL, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(book),\r\n  });\r\n};\r\n\r\n// 책 정보 수정\r\nexport const updateBook = async (id: number, updatedData: Omit<Book, \"id\">): Promise<void> => {\r\n  await fetch(`${API_URL}/${id}`, {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(updatedData),\r\n  });\r\n};\r\n\r\n// 책 삭제\r\nexport const deleteBook = async (id: number): Promise<void> => {\r\n  await fetch(`${API_URL}/${id}`, { method: \"DELETE\" });\r\n};\r\n"],"mappings":"AAEA,MAAMA,OAAO,GAAG,iCAAiC;;AAEjD;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,KAAa,GAAG,EAAE,EAAEC,IAAY,GAAG,CAAC,KAAqD;EACxH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,MAAME,KAAK,UAAUC,IAAI,YAAY,CAAC;;EAE7E;EACA,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;EAElC;EACA,MAAMC,UAAU,GAAGJ,QAAQ,CAACK,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EACxD,MAAMC,UAAU,GAAGH,UAAU,GAAGI,IAAI,CAACC,IAAI,CAACC,MAAM,CAACN,UAAU,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAE;;EAEzE,OAAO;IAAEO,KAAK,EAAET,IAAI,CAACS,KAAK;IAAEJ;EAAW,CAAC;AAC1C,CAAC;;AAGD;AACA,OAAO,MAAMK,aAAa,GAAG,MAAOC,EAAU,IAAoB;EAChE,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,IAAIiB,EAAE,EAAE,CAAC;EAChD,OAAOb,QAAQ,CAACG,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,OAAO,MAAMW,OAAO,GAAG,MAAOC,IAAsB,IAAoB;EACtE,MAAMd,KAAK,CAACL,OAAO,EAAE;IACnBoB,MAAM,EAAE,MAAM;IACdX,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CY,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI;EAC3B,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,UAAU,GAAG,MAAAA,CAAOP,EAAU,EAAEQ,WAA6B,KAAoB;EAC5F,MAAMpB,KAAK,CAAC,GAAGL,OAAO,IAAIiB,EAAE,EAAE,EAAE;IAC9BG,MAAM,EAAE,KAAK;IACbX,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CY,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACE,WAAW;EAClC,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG,MAAOT,EAAU,IAAoB;EAC7D,MAAMZ,KAAK,CAAC,GAAGL,OAAO,IAAIiB,EAAE,EAAE,EAAE;IAAEG,MAAM,EAAE;EAAS,CAAC,CAAC;AACvD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}