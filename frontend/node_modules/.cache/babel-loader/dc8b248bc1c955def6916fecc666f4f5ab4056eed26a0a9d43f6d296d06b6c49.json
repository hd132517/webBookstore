{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skaeh\\\\IdeaProjects\\\\webBookstore\\\\frontend\\\\src\\\\pages\\\\BookDetail.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { fetchBookById, updateBook, deleteBook } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // id는 string으로 처리\n  const navigate = useNavigate();\n  const [book, setBook] = useState(null);\n  useEffect(() => {\n    if (id) {\n      const fetchData = async () => {\n        const bookData = await fetchBookById(id); // id를 string으로 그대로 사용\n        setBook(bookData);\n      };\n      fetchData();\n    } else {\n      console.error(\"Invalid ID: id is undefined\");\n    }\n  }, [id]);\n  if (!book) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uB85C\\uB529 \\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 21\n  }, this);\n  const handleQuantityChange = newQuantity => {\n    if (book && id) {\n      updateBook(id, {\n        ...book,\n        quantity: newQuantity\n      }); // id는 string 그대로 사용\n      setBook(prevBook => prevBook ? {\n        ...prevBook,\n        quantity: newQuantity\n      } : null);\n    }\n  };\n  const handleDelete = async () => {\n    if (id) {\n      await deleteBook(id); // id는 string 그대로 사용\n      navigate(\"/\"); // 삭제 후 홈으로 이동\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: book.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC800\\uC790: \", book.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC124\\uBA85: \", book.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC218\\uB7C9: \", book.quantity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleQuantityChange(book.quantity + 1),\n      children: \"\\uC218\\uB7C9 \\uC99D\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleQuantityChange(book.quantity - 1),\n      children: \"\\uC218\\uB7C9 \\uAC10\\uC18C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      children: \"\\uC0AD\\uC81C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(BookDetail, \"SBmdsbt0IW5kp0KFYtyRq0cUoag=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BookDetail;\nexport default BookDetail;\nvar _c;\n$RefreshReg$(_c, \"BookDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","fetchBookById","updateBook","deleteBook","jsxDEV","_jsxDEV","BookDetail","_s","id","navigate","book","setBook","fetchData","bookData","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","handleQuantityChange","newQuantity","quantity","prevBook","handleDelete","title","author","description","onClick","_c","$RefreshReg$"],"sources":["C:/Users/skaeh/IdeaProjects/webBookstore/frontend/src/pages/BookDetail.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { fetchBookById, updateBook, deleteBook } from \"../api\";\r\nimport { Book } from \"../types\";\r\n\r\nconst BookDetail: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>(); // id는 string으로 처리\r\n  const navigate = useNavigate();\r\n  const [book, setBook] = useState<Book | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      const fetchData = async () => {\r\n        const bookData = await fetchBookById(id); // id를 string으로 그대로 사용\r\n        setBook(bookData);\r\n      };\r\n\r\n      fetchData();\r\n    } else {\r\n      console.error(\"Invalid ID: id is undefined\");\r\n    }\r\n  }, [id]);\r\n\r\n  if (!book) return <p>로딩 중...</p>;\r\n\r\n  const handleQuantityChange = (newQuantity: number) => {\r\n    if (book && id) {\r\n      updateBook(id, { ...book, quantity: newQuantity }); // id는 string 그대로 사용\r\n      setBook((prevBook) => (prevBook ? { ...prevBook, quantity: newQuantity } : null));\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (id) {\r\n      await deleteBook(id); // id는 string 그대로 사용\r\n      navigate(\"/\");  // 삭제 후 홈으로 이동\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>{book.title}</h1>\r\n      <p>저자: {book.author}</p>\r\n      <p>설명: {book.description}</p>\r\n      <p>수량: {book.quantity}</p>\r\n      <button onClick={() => handleQuantityChange(book.quantity + 1)}>수량 증가</button>\r\n      <button onClick={() => handleQuantityChange(book.quantity - 1)}>수량 감소</button>\r\n      <button onClick={handleDelete}>삭제</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}